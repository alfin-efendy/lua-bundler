# Release Automation

name: Auto Release
on:
  push:
    branches:
      - main
    paths:
      - 'CHANGELOG.md'
      - 'go.mod'
      - '**.go'

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      should-release: ${{ steps.version-check.outputs.should-release }}
      new-version: ${{ steps.version-check.outputs.new-version }}
    steps:
    - uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: Check for version bump
      id: version-check
      run: |
        # Get the latest tag
        LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
        echo "Latest tag: $LATEST_TAG"
        
        # Check if CHANGELOG.md mentions a new version
        NEW_VERSION=$(grep -m1 "^## \[" CHANGELOG.md | sed -n 's/^## \[\([^]]*\)\].*/\1/p')
        echo "Version in CHANGELOG: $NEW_VERSION"
        
        if [ "$NEW_VERSION" != "Unreleased" ] && [ "v$NEW_VERSION" != "$LATEST_TAG" ]; then
          echo "should-release=true" >> $GITHUB_OUTPUT
          echo "new-version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "New version detected: $NEW_VERSION"
        else
          echo "should-release=false" >> $GITHUB_OUTPUT
          echo "No new version detected"
        fi

  auto-release:
    needs: check-version
    if: needs.check-version.outputs.should-release == 'true'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ needs.check-version.outputs.new-version }}
        name: Release v${{ needs.check-version.outputs.new-version }}
        body: |
          ## What's Changed
          
          See the [CHANGELOG](CHANGELOG.md) for detailed changes.
          
          **Full Changelog**: https://github.com/${{ github.repository }}/compare/v${{ needs.check-version.outputs.new-version }}...HEAD
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}